#server.port=8088
server.servlet.context-path=/event/v1
#spring.datasource.url=jdbc:mysql://54.202.232.230:3306/Events
spring.datasource.url=jdbc:mysql://localhost:3306/Events
spring.datasource.username=root
spring.datasource.password=tcheedel
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto=update

#mongo db
spring.data.mongodb.database=training
#spring.data.mongodb.uri=mongodb://172.31.38.26:27017
spring.data.mongodb.uri=mongodb://localhost:27017
#spring.data.mongodb.host=172.31.38.26
#spring.data.mongodb.port=27017

# https://www.javainterviewpoint.com/spring-data-jpa-one-to-many/
# https://drissamri.be/blog/java/enable-https-in-spring-boot/
 spring.datasource.max-active = 15
 spring.datasource.max-idle = 10
 spring.datasource.max-wait = 8000

ipAddresses=10.126.218.1,10.126.218.2,10.126.218.3,10.126.218.4,10.126.218.5

#https://www.thomasvitale.com/https-spring-boot-ssl-certificate/
# Define a custom port instead of the default 8080
server.port=8443

# Tell Spring Security (if used) to require requests over HTTPS
security.require-ssl=true
server.ssl.key-store=classpath:eventmonitor1.p12
server.ssl.key-store-type=PKCS12
server.ssl.key-store-password=cmadhttps
server.ssl.key-alias=eventmonitor1

# https://auth0.com/blog/implementing-jwt-authentication-on-spring-boot/


